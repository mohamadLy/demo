[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/CiscoDemo.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/processor/FeedProcessor.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/CiscodemoDB.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/CiscoDb.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/writer/Writer.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/ESClient.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapdemoDB.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/writer/Writer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapDb.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESClient.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/SapDemo.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/processor/FeedProcessor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$GetCar$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$CarResponse$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/elasticsearch/TripIndex.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$ProcessCarFeed.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/SapdemoDB$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/elasticsearch/ESClient.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/FeedDecoder$$anonfun$receive$1.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/SapdemoDB.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/SapDemo$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/SapDemo$delayedInit$body.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$SaveCar.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/cassandra/CassandraCluster.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$SaveTrip$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/Trip$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$$anonfun$receive$1.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/Car.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/events/CarMessage$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/FeedDecoder$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/Car$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/CarResult$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/JsonProtocol.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/events/CarMessage.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$GetCar.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$SaveCar$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/SapDemo.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/consumer/CameraFeedConsumer.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$ProcessCarFeed$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$CarResponse.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/cassandra/CassandraConf.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/FeedDecoder.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/processor/FeedProcessor$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/Trip.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/elasticsearch/CarIndex.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$SaveTrip.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/SapDb.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/TripResult$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/FeedDecoder$Decode$.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/writer/Writer$$anonfun$receive$1.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/elasticsearch/ESJsonProtocol.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/decoder/FeedDecoder$Decode.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/TripResult.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/entities/CarResult.class, /home/mohamadou/workspace/scala/sapdemo/target/scala-2.12/classes/com/sapdemo/db/SapDb$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/exts/exts_2.12/1.60.0/exts_2.12-1.60.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.6/jackson-annotations-2.9.6.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jffi/1.2.10/jffi-1.2.10-native.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpasyncclient/4.1.2/httpasyncclient-4.1.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.6/jackson-module-paranamer-2.9.6.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-suggest/7.5.0/lucene-suggest-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial-extras/7.5.0/lucene-spatial-extras-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial3d/7.5.0/lucene-spatial3d-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/tdunning/t-digest/3.2/t-digest-3.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/rank-eval-client/6.5.2/rank-eval-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.9.6/jackson-dataformat-smile-2.9.6.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.4.13/zookeeper-3.4.13.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-cluster_2.12/2.5.26/akka-cluster_2.12-2.5.26.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/101tec/zkclient/0.10/zkclient-0.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-analysis/5.0.3/asm-analysis-5.0.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/transport-netty4-client/6.5.2/transport-netty4-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.9.6/jackson-module-scala_2.12-2.9.6.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-grouping/7.5.0/lucene-grouping-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-stream_2.12/2.5.26/akka-stream_2.12-2.5.26.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-spray-json_2.12/6.5.1/elastic4s-spray-json_2.12-6.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-ffi/2.0.7/jnr-ffi-2.0.7.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http_2.12/10.1.10/akka-http_2.12-10.1.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.5.0/lz4-java-1.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-queryparser/7.5.0/lucene-queryparser-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-memory/7.5.0/lucene-memory-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/lang-mustache-client/6.5.2/lang-mustache-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial/7.5.0/lucene-spatial-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-analyzers-common/7.5.0/lucene-analyzers-common-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/net/debasishg/redisclient_2.12/3.10/redisclient_2.12-3.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-secure-sm/6.5.2/elasticsearch-secure-sm-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-parsing_2.12/10.1.10/akka-parsing_2.12-10.1.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.8/scala-reflect-2.12.8.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.9.6/jackson-dataformat-cbor-2.9.6.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-buffer/4.1.30.Final/netty-buffer-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/jna/4.5.1/jna-4.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-remote_2.12/2.5.26/akka-remote_2.12-2.5.26.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-cli/6.5.2/elasticsearch-cli-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-common/4.1.30.Final/netty-common-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.7.2/snappy-java-1.1.7.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_2.12/2.5.26/akka-actor_2.12-2.5.26.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/scala-logging/scala-logging_2.12/3.9.0/scala-logging_2.12-3.9.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-core/7.5.0/lucene-core-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka_2.12/2.1.0/kafka_2.12-2.1.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/ssl-config-core_2.12/0.3.8/ssl-config-core_2.12-0.3.8.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-core_2.12/6.5.1/elastic4s-core_2.12-6.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch/6.5.2/elasticsearch-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-transport/4.1.30.Final/netty-transport-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jffi/1.2.10/jffi-1.2.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.30.Final/netty-codec-http-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-x-content/6.5.2/elasticsearch-x-content-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore-nio/4.4.5/httpcore-nio-4.4.5.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.6.0/commons-pool2-2.6.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-backward-codecs/7.5.0/lucene-backward-codecs-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-handler/4.1.30.Final/netty-handler-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/agrona/agrona/0.9.31/agrona-0.9.31.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/client/elasticsearch-rest-client/6.5.2/elasticsearch-rest-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-core_2.12/10.1.10/akka-http-core_2.12-10.1.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/spray/spray-json_2.12/1.3.5/spray-json_2.12-1.3.5.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/spullara/mustache/java/compiler/0.9.3/compiler-0.9.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.8.11/jackson-dataformat-yaml-2.8.11.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/parent-join-client/6.5.2/parent-join-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-join/7.5.0/lucene-join-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-x86asm/1.0.2/jnr-x86asm-1.0.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/aeron/aeron-driver/1.15.1/aeron-driver-1.15.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.3.5-4/zstd-jni-1.3.5-4.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-commons/5.0.3/asm-commons-5.0.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-core/6.5.2/elasticsearch-core-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/carrotsearch/hppc/0.7.1/hppc-0.7.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/percolator-client/6.5.2/percolator-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-core/3.1.2/metrics-core-3.1.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-misc/7.5.0/lucene-misc-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/reindex-client/6.5.2/reindex-client-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-posix/3.0.27/jnr-posix-3.0.27.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.8/scala-library-2.12.8.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/client/transport/6.5.2/transport-6.5.2.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/datastax/cassandra/cassandra-driver-core/3.1.1/cassandra-driver-core-3.1.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-sandbox/7.5.0/lucene-sandbox-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka-clients/2.1.0/kafka-clients-2.1.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/aeron/aeron-client/1.15.1/aeron-client-1.15.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf_2.12/2.5.26/akka-protobuf_2.12-2.5.26.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec/4.1.30.Final/netty-codec-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-spray-json_2.12/10.1.10/akka-http-spray-json_2.12-10.1.10.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-constants/0.9.0/jnr-constants-0.9.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-embedded_2.12/6.5.1/elastic4s-embedded_2.12-6.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.3.3/config-1.3.3.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-queries/7.5.0/lucene-queries-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-highlighter/7.5.0/lucene-highlighter-7.5.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_2.12/0.8.0/scala-java8-compat_2.12-0.8.0.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codelibs/elasticsearch/module/analysis-common/6.5.1/analysis-common-6.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-http_2.12/6.5.1/elastic4s-http_2.12-6.5.1.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-resolver/4.1.30.Final/netty-resolver-4.1.30.Final.jar, /home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(com.sapdemo.db.elasticsearch.TripIndex, com.sapdemo.consumer.CameraFeedConsumer, com.sapdemo.db.elasticsearch.CarIndex, SapDemo, com.sapdemo.decoder.FeedDecoder, com.sapdemo.writer.Writer.SaveCar, com.sapdemo.db.entities.TripResult, com.sapdemo.db.elasticsearch.ESClient, com.sapdemo.db.cassandra.CassandraCluster, com.sapdemo.writer.Writer, com.sapdemo.db.cassandra.CassandraConf, com.sapdemo.db.entities.Car, com.sapdemo.writer.Writer.SaveTrip, com.sapdemo.db.entities.Trip, com.sapdemo.processor.FeedProcessor, com.sapdemo.processor.FeedProcessor.ProcessCarFeed, com.sapdemo.db.entities.CarResult, com.sapdemo.writer.Writer.GetCar, com.sapdemo.db.SapDb, com.sapdemo.decoder.JsonProtocol, com.sapdemo.decoder.FeedDecoder.Decode, com.sapdemo.processor.FeedProcessor.CarResponse, com.sapdemo.events.CarMessage, com.sapdemo.db.elasticsearch.ESJsonProtocol, com.sapdemo.db.SapdemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapdemoDB.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/writer/Writer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapDb.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESClient.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/SapDemo.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/processor/FeedProcessor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapdemoDB.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/writer/Writer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapDb.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESClient.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/SapDemo.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/processor/FeedProcessor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(com.sapdemo.db.elasticsearch.TripIndex, com.sapdemo.consumer.CameraFeedConsumer, com.sapdemo.db.elasticsearch.CarIndex, SapDemo, com.sapdemo.decoder.FeedDecoder, com.sapdemo.writer.Writer.SaveCar, com.sapdemo.db.entities.TripResult, com.sapdemo.db.elasticsearch.ESClient, com.sapdemo.db.cassandra.CassandraCluster, com.sapdemo.writer.Writer, com.sapdemo.db.cassandra.CassandraConf, com.sapdemo.db.entities.Car, com.sapdemo.writer.Writer.SaveTrip, com.sapdemo.db.entities.Trip, com.sapdemo.processor.FeedProcessor, com.sapdemo.processor.FeedProcessor.ProcessCarFeed, com.sapdemo.db.entities.CarResult, com.sapdemo.writer.Writer.GetCar, com.sapdemo.db.SapDb, com.sapdemo.decoder.JsonProtocol, com.sapdemo.decoder.FeedDecoder.Decode, com.sapdemo.processor.FeedProcessor.CarResponse, com.sapdemo.events.CarMessage, com.sapdemo.db.elasticsearch.ESJsonProtocol, com.sapdemo.db.SapdemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapdemoDB.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/writer/Writer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/CiscoDemo.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/processor/FeedProcessor.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/cassandra/CassandraCluster.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/CiscodemoDB.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/TripIndex.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/entities/Entities.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/CiscoDb.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/writer/Writer.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/events/EventMessage.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/ESJsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/consumer/CameraFeedConsumer.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/decoder/JsonProtocol.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/CarIndex.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/decoder/FeedDecoder.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/SapDb.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/db/elasticsearch/ESClient.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/SapDemo.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/cassandra/CassandraConf.scala, /home/mohamadou/workspace/scala/sapdemo/src/main/scala/com/sapdemo/processor/FeedProcessor.scala, /home/mohamadou/workspace/scala/ciscodemo/src/main/scala/com/ciscodemo/db/elasticsearch/ESClient.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.elasticsearch.TripIndex, com.sapdemo.consumer.CameraFeedConsumer, com.sapdemo.db.elasticsearch.CarIndex, SapDemo, com.sapdemo.decoder.FeedDecoder, com.sapdemo.writer.Writer.SaveCar, com.sapdemo.db.entities.TripResult, com.sapdemo.db.elasticsearch.ESClient, com.sapdemo.db.cassandra.CassandraCluster, com.sapdemo.writer.Writer, com.sapdemo.db.cassandra.CassandraConf, com.sapdemo.db.entities.Car, com.sapdemo.writer.Writer.SaveTrip, com.sapdemo.db.entities.Trip, com.sapdemo.processor.FeedProcessor, com.sapdemo.processor.FeedProcessor.ProcessCarFeed, com.sapdemo.db.entities.CarResult, com.sapdemo.writer.Writer.GetCar, com.sapdemo.db.SapDb, com.sapdemo.decoder.JsonProtocol, com.sapdemo.decoder.FeedDecoder.Decode, com.sapdemo.processor.FeedProcessor.CarResponse, com.sapdemo.events.CarMessage, com.sapdemo.db.elasticsearch.ESJsonProtocol, com.sapdemo.db.SapdemoDB[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.sapdemo.db.SapdemoDB by com.sapdemo.db.cassandra.CassandraCluster[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 16 Scala sources to /home/mohamadou/workspace/scala/ciscodemo/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.1:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.1:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4b7bd56c for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.8/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mohamadou/workspace/scala/ciscodemo/target/scala-2.12/classes:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.7.2/snappy-java-1.1.7.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/client/transport/6.5.2/transport-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec/4.1.30.Final/netty-codec-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-highlighter/7.5.0/lucene-highlighter-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-cluster_2.12/2.5.26/akka-cluster_2.12-2.5.26.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/percolator-client/6.5.2/percolator-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka-clients/2.1.0/kafka-clients-2.1.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.30.Final/netty-codec-http-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-core/6.5.2/elasticsearch-core-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codelibs/elasticsearch/module/analysis-common/6.5.1/analysis-common-6.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-misc/7.5.0/lucene-misc-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/exts/exts_2.12/1.60.0/exts_2.12-1.60.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-sandbox/7.5.0/lucene-sandbox-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-core/3.1.2/metrics-core-3.1.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.5.0/lz4-java-1.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.9.6/jackson-dataformat-smile-2.9.6.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial-extras/7.5.0/lucene-spatial-extras-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.9.6/jackson-module-scala_2.12-2.9.6.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch/6.5.2/elasticsearch-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_2.12/0.8.0/scala-java8-compat_2.12-0.8.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-buffer/4.1.30.Final/netty-buffer-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/ssl-config-core_2.12/0.3.8/ssl-config-core_2.12-0.3.8.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-spray-json_2.12/6.5.1/elastic4s-spray-json_2.12-6.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/reindex-client/6.5.2/reindex-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-resolver/4.1.30.Final/netty-resolver-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/scala-logging/scala-logging_2.12/3.9.0/scala-logging_2.12-3.9.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-remote_2.12/2.5.26/akka-remote_2.12-2.5.26.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-grouping/7.5.0/lucene-grouping-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-common/4.1.30.Final/netty-common-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/spray/spray-json_2.12/1.3.5/spray-json_2.12-1.3.5.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/spullara/mustache/java/compiler/0.9.3/compiler-0.9.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http_2.12/10.1.10/akka-http_2.12-10.1.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-commons/5.0.3/asm-commons-5.0.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-posix/3.0.27/jnr-posix-3.0.27.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.6/jackson-annotations-2.9.6.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-secure-sm/6.5.2/elasticsearch-secure-sm-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf_2.12/2.5.26/akka-protobuf_2.12-2.5.26.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-join/7.5.0/lucene-join-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/agrona/agrona/0.9.31/agrona-0.9.31.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/rank-eval-client/6.5.2/rank-eval-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_2.12/2.5.26/akka-actor_2.12-2.5.26.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-memory/7.5.0/lucene-memory-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-http_2.12/6.5.1/elastic4s-http_2.12-6.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jffi/1.2.10/jffi-1.2.10-native.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-transport/4.1.30.Final/netty-transport-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-parsing_2.12/10.1.10/akka-parsing_2.12-10.1.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/client/elasticsearch-rest-client/6.5.2/elasticsearch-rest-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/carrotsearch/hppc/0.7.1/hppc-0.7.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/jna/4.5.1/jna-4.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/transport-netty4-client/6.5.2/transport-netty4-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-backward-codecs/7.5.0/lucene-backward-codecs-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/lang-mustache-client/6.5.2/lang-mustache-client-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-ffi/2.0.7/jnr-ffi-2.0.7.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-cli/6.5.2/elasticsearch-cli-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-analyzers-common/7.5.0/lucene-analyzers-common-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/101tec/zkclient/0.10/zkclient-0.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/net/debasishg/redisclient_2.12/3.10/redisclient_2.12-3.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.6.0/commons-pool2-2.6.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-analysis/5.0.3/asm-analysis-5.0.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.3.5-4/zstd-jni-1.3.5-4.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.8.11/jackson-dataformat-yaml-2.8.11.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.8/scala-reflect-2.12.8.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/aeron/aeron-client/1.15.1/aeron-client-1.15.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/elasticsearch-x-content/6.5.2/elasticsearch-x-content-6.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-stream_2.12/2.5.26/akka-stream_2.12-2.5.26.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka_2.12/2.1.0/kafka_2.12-2.1.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore-nio/4.4.5/httpcore-nio-4.4.5.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.9.6/jackson-dataformat-cbor-2.9.6.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-spray-json_2.12/10.1.10/akka-http-spray-json_2.12-10.1.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.4.13/zookeeper-3.4.13.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-queries/7.5.0/lucene-queries-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-constants/0.9.0/jnr-constants-0.9.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-suggest/7.5.0/lucene-suggest-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.6/jackson-module-paranamer-2.9.6.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-core/7.5.0/lucene-core-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpasyncclient/4.1.2/httpasyncclient-4.1.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-core_2.12/6.5.1/elastic4s-core_2.12-6.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/elastic4s/elastic4s-embedded_2.12/6.5.1/elastic4s-embedded_2.12-6.5.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jnr-x86asm/1.0.2/jnr-x86asm-1.0.2.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.3.3/config-1.3.3.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-handler/4.1.30.Final/netty-handler-4.1.30.Final.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial3d/7.5.0/lucene-spatial3d-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-queryparser/7.5.0/lucene-queryparser-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-core_2.12/10.1.10/akka-http-core_2.12-10.1.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/lucene/lucene-spatial/7.5.0/lucene-spatial-7.5.0.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/jnr/jffi/1.2.10/jffi-1.2.10.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/com/datastax/cassandra/cassandra-driver-core/3.1.1/cassandra-driver-core-3.1.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/io/aeron/aeron-driver/1.15.1/aeron-driver-1.15.1.jar:/home/mohamadou/.cache/coursier/v1/https/repo1.maven.org/maven2/org/elasticsearch/plugin/parent-join-client/6.5.2/parent-join-client-6.5.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 25.064952135 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.entities.CarResult...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.entities.CarResult[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.entities.CarResult)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.entities.CarResult,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(com;sapdemo;db;entities;CarResult;init;,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(cars,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(CarResult,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.entities.CarResult has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(com;sapdemo;db;entities;CarResult;init;,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(cars,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(CarResult,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.entities.CarResult)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.processor.FeedProcessor.ProcessCarFeed...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.processor.FeedProcessor.ProcessCarFeed[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.processor.FeedProcessor.ProcessCarFeed)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.processor.FeedProcessor.ProcessCarFeed,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;processor;FeedProcessor;ProcessCarFeed;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.processor.FeedProcessor.ProcessCarFeed has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;processor;FeedProcessor;ProcessCarFeed;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.processor.FeedProcessor.ProcessCarFeed)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.decoder.FeedDecoder.Decode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.decoder.FeedDecoder.Decode[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.decoder.FeedDecoder.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.decoder.FeedDecoder.Decode,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Decode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(value,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;decoder;FeedDecoder;Decode;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.decoder.FeedDecoder.Decode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Decode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(value,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;decoder;FeedDecoder;Decode;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.decoder.FeedDecoder.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.entities.CarResult...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.entities.CarResult[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.entities.CarResult)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.CarIndex: Set(UsedName(apply,[Default]), UsedName(CarResult,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]), UsedName(apply,[Default]), UsedName(cars,[Default]), UsedName(CarResult,[Default]), UsedName(total,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.ESJsonProtocol: Set(UsedName(apply,[Default]), UsedName(CarResult,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.entities.CarResult,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(com;ciscodemo;db;entities;CarResult;init;,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(cars,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(CarResult,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.db.entities.CarResult has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(com;ciscodemo;db;entities;CarResult;init;,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(cars,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(CarResult,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.entities.CarResult)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.elasticsearch.CarIndex, com.ciscodemo.db.CiscoDb, com.ciscodemo.db.elasticsearch.ESJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.SapdemoDB...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.SapdemoDB[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.SapdemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.SapdemoDB,ModifiedNames(changes = UsedName(cluster,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(insertCarSchema,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCarStatement,[Default]), UsedName(getTripStatement,[Default]), UsedName(insertCar,[Default]), UsedName(getCarSchema,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(com;sapdemo;db;SapdemoDB;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(insertTripSchema,[Default]), UsedName(poolingOptions,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(getTripSchema,[Default]), UsedName(getCarStatement,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(session,[Implicit]), UsedName(insertTripStatement,[Default]), UsedName(cassandraConf,[Default]), UsedName(SapdemoDB,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.SapdemoDB has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(session,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.SapdemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.decoder.FeedDecoder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.decoder.FeedDecoder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.decoder.FeedDecoder,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(aroundPreRestart,[Default]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(com;sapdemo;decoder;FeedDecoder;init;,[Default]), UsedName(jsonFormat15,[Default]), UsedName(decode,[Default]), UsedName(viaSeq,[Default]), UsedName(unhandled,[Default]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(sender,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(Decode,[Default]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(Receive,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(context,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(FeedDecoder,[Default]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(postStop,[Default]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(props,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.decoder.FeedDecoder has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(context,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.processor.FeedProcessor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.processor.FeedProcessor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.processor.FeedProcessor are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.CiscoDemo[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.decoder.FeedDecoder[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.writer.Writer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.processor.FeedProcessor,ModifiedNames(changes = UsedName(com;ciscodemo;processor;FeedProcessor;init;,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(unhandled,[Default]), UsedName(sender,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(FeedProcessor,[Default]), UsedName(redisKey,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(timeout,[Implicit]), UsedName(processCarFeed,[Default]), UsedName(Receive,[Default]), UsedName(notify,[Default]), UsedName(context,[Implicit]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(postStop,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(props,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.processor.FeedProcessor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(timeout,[Implicit]), UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.writer.Writer, com.ciscodemo.decoder.FeedDecoder, com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.processor.FeedProcessor.CarResponse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.processor.FeedProcessor.CarResponse[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.processor.FeedProcessor.CarResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.processor.FeedProcessor.CarResponse,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(com;sapdemo;processor;FeedProcessor;CarResponse;init;,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.processor.FeedProcessor.CarResponse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(com;sapdemo;processor;FeedProcessor;CarResponse;init;,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.processor.FeedProcessor.CarResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from SapDemo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: SapDemo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(SapDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(SapDemo,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(system,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(processor,[Default]), UsedName(notify,[Default]), UsedName(writer,[Default]), UsedName(SapDemo,[Default]), UsedName(topic,[Default]), UsedName(==,[Default]), UsedName(decoder,[Default]), UsedName(consumer,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The SapDemo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(system,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(processor,[Default]), UsedName(notify,[Default]), UsedName(writer,[Default]), UsedName(SapDemo,[Default]), UsedName(topic,[Default]), UsedName(==,[Default]), UsedName(decoder,[Default]), UsedName(consumer,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(SapDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.entities.TripResult...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.entities.TripResult[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.entities.TripResult)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]), UsedName(TripResult,[Default]), UsedName(apply,[Default]), UsedName(trips,[Default]), UsedName(total,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.TripIndex: Set(UsedName(TripResult,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.ESJsonProtocol: Set(UsedName(TripResult,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.entities.TripResult,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(TripResult,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;ciscodemo;db;entities;TripResult;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(trips,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.db.entities.TripResult has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(TripResult,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;ciscodemo;db;entities;TripResult;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(trips,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.entities.TripResult)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscoDb, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.ESJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.elasticsearch.ESClient...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.elasticsearch.ESClient[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.elasticsearch.CarIndex by com.ciscodemo.db.elasticsearch.ESClient[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.elasticsearch.TripIndex by com.ciscodemo.db.elasticsearch.ESClient[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.elasticsearch.ESClient, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.CarIndex: Set(UsedName(ESClient,[Default]), UsedName(client,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.TripIndex: Set(UsedName(ESClient,[Default]), UsedName(client,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.elasticsearch.ESClient,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ESClient,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.db.elasticsearch.ESClient has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ESClient,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.elasticsearch.ESClient, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.elasticsearch.CarIndex, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.writer.Writer.GetCar...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.writer.Writer.GetCar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.writer.Writer.GetCar)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.writer.Writer.GetCar,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;sapdemo;writer;Writer;GetCar;init;,[Default]), UsedName(productIterator,[Default]), UsedName(replyTo,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(GetCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.writer.Writer.GetCar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;sapdemo;writer;Writer;GetCar;init;,[Default]), UsedName(productIterator,[Default]), UsedName(replyTo,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(GetCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.writer.Writer.GetCar)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.consumer.CameraFeedConsumer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.consumer.CameraFeedConsumer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.consumer.CameraFeedConsumer,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CameraFeedConsumer,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(consumeVideoFeed,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;consumer;CameraFeedConsumer;init;,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.consumer.CameraFeedConsumer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CameraFeedConsumer,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(consumeVideoFeed,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(com;sapdemo;consumer;CameraFeedConsumer;init;,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.cassandra.CassandraConf...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.cassandra.CassandraConf[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.cassandra.CassandraCluster by com.ciscodemo.db.cassandra.CassandraConf[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.CiscodemoDB by com.ciscodemo.db.cassandra.CassandraCluster[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.cassandra.CassandraConf, com.ciscodemo.db.cassandra.CassandraCluster, com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.cassandra.CassandraCluster: Set(UsedName(CassandraConf,[Default]), UsedName(cassandraPort,[Default]), UsedName(cassandraHosts,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscodemoDB: Set(UsedName(!=,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.cassandra.CassandraConf,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CassandraConf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 3 classes due to The com.ciscodemo.db.cassandra.CassandraConf has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CassandraConf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.cassandra.CassandraConf, com.ciscodemo.db.cassandra.CassandraCluster, com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.cassandra.CassandraCluster, com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.processor.FeedProcessor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.processor.FeedProcessor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.processor.FeedProcessor,ModifiedNames(changes = UsedName(com;sapdemo;processor;FeedProcessor;init;,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(unhandled,[Default]), UsedName(sender,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(FeedProcessor,[Default]), UsedName(redisKey,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(timeout,[Implicit]), UsedName(processCarFeed,[Default]), UsedName(Receive,[Default]), UsedName(notify,[Default]), UsedName(context,[Implicit]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(postStop,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(props,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.processor.FeedProcessor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(timeout,[Implicit]), UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.writer.Writer.GetCar...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.writer.Writer.GetCar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.writer.Writer.GetCar)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(registrationNumber,[Default]), UsedName(==,[Default]), UsedName(GetCar,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.writer.Writer.GetCar,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(replyTo,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(GetCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(com;ciscodemo;writer;Writer;GetCar;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.writer.Writer.GetCar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(replyTo,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(GetCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(com;ciscodemo;writer;Writer;GetCar;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.writer.Writer.GetCar)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.elasticsearch.ESJsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.elasticsearch.ESJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.elasticsearch.ESJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.elasticsearch.ESJsonProtocol,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(ESJsonProtocol,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.elasticsearch.ESJsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.elasticsearch.ESJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.elasticsearch.CarIndex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.elasticsearch.CarIndex[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.elasticsearch.CarIndex are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.CiscoDb[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.elasticsearch.CarIndex,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(indexType,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(storeCar,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(logger,[Default]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(addIndex,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(CarIndex,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(com;ciscodemo;db;elasticsearch;CarIndex;init;,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(initIndices,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(indexName,[Default]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.db.elasticsearch.CarIndex has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.elasticsearch.ESJsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.elasticsearch.ESJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.elasticsearch.CarIndex by com.ciscodemo.db.elasticsearch.ESJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.elasticsearch.TripIndex by com.ciscodemo.db.elasticsearch.ESJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.elasticsearch.ESJsonProtocol, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.elasticsearch.ESJsonProtocol are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.elasticsearch.CarIndex[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.elasticsearch.TripIndex[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.elasticsearch.TripIndex are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.CiscoDb[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.elasticsearch.CarIndex are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.CiscoDb[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.elasticsearch.ESJsonProtocol,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(ESJsonProtocol,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.db.elasticsearch.ESJsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.elasticsearch.ESJsonProtocol, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.elasticsearch.CarIndex, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.entities.Car...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.entities.Car[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.entities.Car)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.CiscoDemo: Set(UsedName(apply,[Default]), UsedName(Car,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.ESJsonProtocol: Set(UsedName(apply,[Default]), UsedName(Car,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscodemoDB: Set(UsedName(color,[Default]), UsedName(!=,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(subscription,[Default]), UsedName(owner,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor.CarResponse: Set(UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.CarIndex: Set(UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(subscription,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer.SaveCar: Set(UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(Car,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.entities.Car,ModifiedNames(changes = UsedName(color,[Default]), UsedName(com;ciscodemo;db;entities;Car;init;,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Car,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(subscription,[Default]), UsedName(owner,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 10 classes due to The com.ciscodemo.db.entities.Car has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(color,[Default]), UsedName(com;ciscodemo;db;entities;Car;init;,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Car,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(subscription,[Default]), UsedName(owner,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.entities.Car)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscoDb, com.ciscodemo.CiscoDemo, com.ciscodemo.db.elasticsearch.ESJsonProtocol, com.ciscodemo.db.CiscodemoDB, com.ciscodemo.processor.FeedProcessor.CarResponse, com.ciscodemo.db.elasticsearch.CarIndex, com.ciscodemo.processor.FeedProcessor, com.ciscodemo.writer.Writer, com.ciscodemo.writer.Writer.SaveCar)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.processor.FeedProcessor.CarResponse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.processor.FeedProcessor.CarResponse[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.processor.FeedProcessor.CarResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer: Set(UsedName(CarResponse,[Default]), UsedName(isInstanceOf,[Default]), UsedName(car,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.processor.FeedProcessor.CarResponse,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(hashCode,[Default]), UsedName(com;ciscodemo;processor;FeedProcessor;CarResponse;init;,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.processor.FeedProcessor.CarResponse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CarResponse,[Default]), UsedName(hashCode,[Default]), UsedName(com;ciscodemo;processor;FeedProcessor;CarResponse;init;,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.processor.FeedProcessor.CarResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.writer.Writer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.cassandra.CassandraCluster...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.cassandra.CassandraCluster[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.cassandra.CassandraCluster)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.cassandra.CassandraCluster,ModifiedNames(changes = UsedName(cluster,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(poolingOptions,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(session,[Implicit]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(CassandraCluster,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.cassandra.CassandraCluster has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(session,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.cassandra.CassandraCluster)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.cassandra.CassandraConf...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.cassandra.CassandraConf[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.cassandra.CassandraConf)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.cassandra.CassandraConf,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CassandraConf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.cassandra.CassandraConf has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(CassandraConf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.cassandra.CassandraConf)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.writer.Writer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.writer.Writer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.writer.Writer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.writer.Writer are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.CiscoDemo[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.processor.FeedProcessor[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.writer.Writer,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(unhandled,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(com;ciscodemo;writer;Writer;init;,[Default]), UsedName(Receive,[Default]), UsedName(notify,[Default]), UsedName(context,[Implicit]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(SaveCar,[Default]), UsedName(GetCar,[Default]), UsedName(postStop,[Default]), UsedName(ne,[Default]), UsedName(Writer,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(props,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 3 classes due to The com.ciscodemo.writer.Writer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.writer.Writer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.processor.FeedProcessor, com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.processor.FeedProcessor.ProcessCarFeed...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.processor.FeedProcessor.ProcessCarFeed[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.processor.FeedProcessor.ProcessCarFeed)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.decoder.FeedDecoder: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.processor.FeedProcessor.ProcessCarFeed,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(com;ciscodemo;processor;FeedProcessor;ProcessCarFeed;init;,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.processor.FeedProcessor.ProcessCarFeed has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(com;ciscodemo;processor;FeedProcessor;ProcessCarFeed;init;,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(ProcessCarFeed,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.processor.FeedProcessor.ProcessCarFeed)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.SapDb...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.SapDb[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.SapDb)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.SapDb,ModifiedNames(changes = UsedName(tripIndex,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCar,[Default]), UsedName(finalize,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(SapDb,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(initDB,[Default]), UsedName(==,[Default]), UsedName(carIndex,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.SapDb has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tripIndex,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCar,[Default]), UsedName(finalize,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(SapDb,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(initDB,[Default]), UsedName(==,[Default]), UsedName(carIndex,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.SapDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.writer.Writer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.writer.Writer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.writer.Writer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.writer.Writer,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(unhandled,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(com;sapdemo;writer;Writer;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(Receive,[Default]), UsedName(notify,[Default]), UsedName(context,[Implicit]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(SaveCar,[Default]), UsedName(GetCar,[Default]), UsedName(postStop,[Default]), UsedName(ne,[Default]), UsedName(Writer,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(props,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.writer.Writer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.writer.Writer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.elasticsearch.TripIndex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.elasticsearch.TripIndex[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.elasticsearch.TripIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.elasticsearch.TripIndex are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.CiscoDb[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.elasticsearch.TripIndex,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(indexType,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(com;ciscodemo;db;elasticsearch;TripIndex;init;,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(logger,[Default]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(addIndex,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(getTrip,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(TripIndex,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(initIndices,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(indexName,[Default]), UsedName(lazyFormat,[Default]), UsedName(storeTrip,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.db.elasticsearch.TripIndex has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.elasticsearch.TripIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.entities.Car...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.entities.Car[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.entities.Car)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.entities.Car,ModifiedNames(changes = UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Car,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(subscription,[Default]), UsedName(owner,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(com;sapdemo;db;entities;Car;init;,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.entities.Car has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(Car,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(subscription,[Default]), UsedName(owner,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(com;sapdemo;db;entities;Car;init;,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.entities.Car)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.writer.Writer.SaveCar...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.writer.Writer.SaveCar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.writer.Writer.SaveCar)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.writer.Writer.SaveCar,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(SaveCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(com;sapdemo;writer;Writer;SaveCar;init;,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.writer.Writer.SaveCar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(SaveCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(com;sapdemo;writer;Writer;SaveCar;init;,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.writer.Writer.SaveCar)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.decoder.FeedDecoder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.decoder.FeedDecoder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.decoder.FeedDecoder are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.CiscoDemo[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.consumer.CameraFeedConsumer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.decoder.FeedDecoder,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(aroundPreRestart,[Default]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName(com;ciscodemo;decoder;FeedDecoder;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(decode,[Default]), UsedName(viaSeq,[Default]), UsedName(unhandled,[Default]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(sender,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(Decode,[Default]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(Receive,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(context,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(FeedDecoder,[Default]), UsedName(==,[Default]), UsedName(preRestart,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(postStop,[Default]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(preStart,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(props,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(self,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(clone,[Default]))) invalidates 3 classes due to The com.ciscodemo.decoder.FeedDecoder has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(context,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.CiscoDemo, com.ciscodemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.cassandra.CassandraCluster...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.cassandra.CassandraCluster[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.db.CiscodemoDB by com.ciscodemo.db.cassandra.CassandraCluster[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.cassandra.CassandraCluster, com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.db.cassandra.CassandraCluster are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.db.CiscodemoDB[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.cassandra.CassandraCluster,ModifiedNames(changes = UsedName(cluster,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(poolingOptions,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(notify,[Default]), UsedName(session,[Implicit]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(CassandraCluster,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.db.cassandra.CassandraCluster has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(session,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.cassandra.CassandraCluster, com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.writer.Writer.SaveCar...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.writer.Writer.SaveCar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.writer.Writer.SaveCar)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.writer.Writer.SaveCar,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(com;ciscodemo;writer;Writer;SaveCar;init;,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(SaveCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.ciscodemo.writer.Writer.SaveCar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(car,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(com;ciscodemo;writer;Writer;SaveCar;init;,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(SaveCar,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.writer.Writer.SaveCar)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.CiscodemoDB...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.CiscodemoDB[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.CiscodemoDB,ModifiedNames(changes = UsedName(cluster,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(insertCarSchema,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCarStatement,[Default]), UsedName(getTripStatement,[Default]), UsedName(insertCar,[Default]), UsedName(getCarSchema,[Default]), UsedName(finalize,[Default]), UsedName(cassandraPort,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(insertTripSchema,[Default]), UsedName(poolingOptions,[Default]), UsedName(cassandraKeyspace,[Default]), UsedName(getTripSchema,[Default]), UsedName(getCarStatement,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(session,[Implicit]), UsedName(insertTripStatement,[Default]), UsedName(CiscodemoDB,[Default]), UsedName(cassandraConf,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(cassandraHosts,[Default]), UsedName(toString,[Default]), UsedName(com;ciscodemo;db;CiscodemoDB;init;,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.ciscodemo.db.CiscodemoDB has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(session,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.CiscodemoDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.decoder.JsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.decoder.JsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.decoder.JsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.decoder.JsonProtocol,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(JsonProtocol,[Default]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.decoder.JsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.decoder.JsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.events.CarMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.events.CarMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.events.CarMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.events.CarMessage,ModifiedNames(changes = UsedName(speed,[Default]), UsedName(CarMessage,[Default]), UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;sapdemo;events;CarMessage;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.events.CarMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(speed,[Default]), UsedName(CarMessage,[Default]), UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;sapdemo;events;CarMessage;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.events.CarMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.CiscoDemo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.CiscoDemo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.CiscoDemo,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(system,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(CiscoDemo,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(processor,[Default]), UsedName(notify,[Default]), UsedName(writer,[Default]), UsedName(topic,[Default]), UsedName(==,[Default]), UsedName(decoder,[Default]), UsedName(consumer,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.ciscodemo.CiscoDemo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(system,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(CiscoDemo,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(processor,[Default]), UsedName(notify,[Default]), UsedName(writer,[Default]), UsedName(topic,[Default]), UsedName(==,[Default]), UsedName(decoder,[Default]), UsedName(consumer,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.events.CarMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.events.CarMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.events.CarMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor: Set(UsedName(speed,[Default]), UsedName(CarMessage,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(registrationNumber,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor.ProcessCarFeed: Set(UsedName(CarMessage,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.decoder.JsonProtocol: Set(UsedName(CarMessage,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.decoder.FeedDecoder: Set(UsedName(CarMessage,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.events.CarMessage,ModifiedNames(changes = UsedName(speed,[Default]), UsedName(CarMessage,[Default]), UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(com;ciscodemo;events;CarMessage;init;,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 5 classes due to The com.ciscodemo.events.CarMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(speed,[Default]), UsedName(CarMessage,[Default]), UsedName(color,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$4,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(com;ciscodemo;events;CarMessage;init;,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(registrationNumber,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.events.CarMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.processor.FeedProcessor, com.ciscodemo.processor.FeedProcessor.ProcessCarFeed, com.ciscodemo.decoder.JsonProtocol, com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.elasticsearch.CarIndex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.elasticsearch.CarIndex[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.elasticsearch.CarIndex,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(com;sapdemo;db;elasticsearch;CarIndex;init;,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(indexType,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(storeCar,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(logger,[Default]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(addIndex,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(CarIndex,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(initIndices,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(indexName,[Default]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.elasticsearch.CarIndex has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.elasticsearch.CarIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.decoder.JsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.decoder.JsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.ciscodemo.decoder.FeedDecoder by com.ciscodemo.decoder.JsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.decoder.JsonProtocol, com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.decoder.JsonProtocol are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.decoder.FeedDecoder[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of com.ciscodemo.decoder.FeedDecoder are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.CiscoDemo[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.ciscodemo.consumer.CameraFeedConsumer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.decoder.JsonProtocol,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(JsonProtocol,[Default]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The com.ciscodemo.decoder.JsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.decoder.JsonProtocol, com.ciscodemo.decoder.FeedDecoder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.decoder.FeedDecoder, com.ciscodemo.CiscoDemo, com.ciscodemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.entities.TripResult...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.entities.TripResult[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.entities.TripResult)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.entities.TripResult,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(TripResult,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(trips,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(com;sapdemo;db;entities;TripResult;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.entities.TripResult has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(TripResult,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(trips,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(total,[Default]), UsedName(com;sapdemo;db;entities;TripResult;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.entities.TripResult)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.consumer.CameraFeedConsumer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.consumer.CameraFeedConsumer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.CiscoDemo: Set(UsedName(CameraFeedConsumer,[Default]), UsedName(com;ciscodemo;consumer;CameraFeedConsumer;init;,[Default]), UsedName(consumeVideoFeed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.consumer.CameraFeedConsumer,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CameraFeedConsumer,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;ciscodemo;consumer;CameraFeedConsumer;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(consumeVideoFeed,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.consumer.CameraFeedConsumer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CameraFeedConsumer,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(com;ciscodemo;consumer;CameraFeedConsumer;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(consumeVideoFeed,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.entities.Trip...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.entities.Trip[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.entities.Trip)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.entities.Trip,ModifiedNames(changes = UsedName(speed,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(com;sapdemo;db;entities;Trip;init;,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.entities.Trip has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(speed,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(com;sapdemo;db;entities;Trip;init;,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.entities.Trip)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.elasticsearch.TripIndex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.elasticsearch.TripIndex[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.elasticsearch.TripIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.elasticsearch.TripIndex,ModifiedNames(changes = UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(com;sapdemo;db;elasticsearch;TripIndex;init;,[Default]), UsedName(setFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat11,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(productElement2Field,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(write,[Default]), UsedName(carResultFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(extractFieldNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(indexType,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(delegate,[Default]), UsedName(jsonFormat5,[Default]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat12,[Default]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(viaSeq,[Default]), UsedName(tripResultFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(logger,[Default]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(addIndex,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(JF,[Default]), UsedName(notifyAll,[Default]), UsedName(jsonFormat16,[Default]), UsedName(jsonFormat14,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat3,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(getTrip,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(jsonFormat18,[Default]), UsedName(jsonFormat8,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(notify,[Default]), UsedName(jsonFormat9,[Default]), UsedName(seqFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(lift,[Default]), UsedName(TripIndex,[Default]), UsedName(jsonFormat22,[Default]), UsedName(jsonFormat19,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(jsonFormat20,[Default]), UsedName(==,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat13,[Default]), UsedName(fromField,[Default]), UsedName(equals,[Default]), UsedName(OptionFormat,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(initIndices,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(read,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(indexName,[Default]), UsedName(lazyFormat,[Default]), UsedName(storeTrip,[Default]), UsedName(jsonFormat10,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.elasticsearch.TripIndex has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(carResultFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tripFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tripResultFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(carFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(eitherFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.elasticsearch.TripIndex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.decoder.FeedDecoder.Decode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.decoder.FeedDecoder.Decode[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.decoder.FeedDecoder.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.consumer.CameraFeedConsumer: Set(UsedName(apply,[Default]), UsedName(Decode,[Default]), UsedName(value,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.decoder.FeedDecoder.Decode,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(com;ciscodemo;decoder;FeedDecoder;Decode;init;,[Default]), UsedName(Decode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(value,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.decoder.FeedDecoder.Decode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(com;ciscodemo;decoder;FeedDecoder;Decode;init;,[Default]), UsedName(Decode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(value,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.decoder.FeedDecoder.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.consumer.CameraFeedConsumer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.CiscoDb...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.CiscoDb[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer: Set(UsedName(CiscoDb,[Default]), UsedName(isInstanceOf,[Default]), UsedName(insertCar,[Default]), UsedName(insertTrip,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.CiscoDemo: Set(UsedName(CiscoDb,[Default]), UsedName(insertCar,[Default]), UsedName(initDB,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.CiscoDb,ModifiedNames(changes = UsedName(tripIndex,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CiscoDb,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCar,[Default]), UsedName(finalize,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(initDB,[Default]), UsedName(==,[Default]), UsedName(carIndex,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 3 classes due to The com.ciscodemo.db.CiscoDb has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tripIndex,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(CiscoDb,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(insertCar,[Default]), UsedName(finalize,[Default]), UsedName(insertTrip,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getTrip,[Default]), UsedName(notify,[Default]), UsedName(initDB,[Default]), UsedName(==,[Default]), UsedName(carIndex,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(getCar,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.CiscoDb)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.writer.Writer, com.ciscodemo.CiscoDemo)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.writer.Writer.SaveTrip...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.writer.Writer.SaveTrip[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.writer.Writer.SaveTrip)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.writer.Writer.SaveTrip,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName(com;sapdemo;writer;Writer;SaveTrip;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(trip,[Default]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.writer.Writer.SaveTrip has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName(com;sapdemo;writer;Writer;SaveTrip;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(trip,[Default]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.writer.Writer.SaveTrip)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.writer.Writer.SaveTrip...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.writer.Writer.SaveTrip[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.writer.Writer.SaveTrip)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(trip,[Default]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.writer.Writer.SaveTrip,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(com;ciscodemo;writer;Writer;SaveTrip;init;,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(trip,[Default]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The com.ciscodemo.writer.Writer.SaveTrip has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(compose,[Default]), UsedName(com;ciscodemo;writer;Writer;SaveTrip;init;,[Default]), UsedName(notify,[Default]), UsedName(andThen,[Default]), UsedName(trip,[Default]), UsedName(SaveTrip,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.writer.Writer.SaveTrip)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.processor.FeedProcessor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.ciscodemo.db.entities.Trip...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.ciscodemo.db.entities.Trip[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.ciscodemo.db.entities.Trip)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscoDb: Set(UsedName(!=,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.TripIndex: Set(UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.elasticsearch.ESJsonProtocol: Set(UsedName(Trip,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.db.CiscodemoDB: Set(UsedName(speed,[Default]), UsedName(!=,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(time,[Default]), UsedName(registration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.processor.FeedProcessor: Set(UsedName(speed,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer: Set(UsedName(isInstanceOf,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.ciscodemo.writer.Writer.SaveTrip: Set(UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.ciscodemo.db.entities.Trip,ModifiedNames(changes = UsedName(speed,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(com;ciscodemo;db;entities;Trip;init;,[Default]), UsedName(finalize,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]))) invalidates 8 classes due to The com.ciscodemo.db.entities.Trip has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(speed,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(com;ciscodemo;db;entities;Trip;init;,[Default]), UsedName(finalize,[Default]), UsedName(Trip,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(canEqual,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(time,[Default]), UsedName(registration,[Default]), UsedName(ne,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.ciscodemo.db.entities.Trip)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.ciscodemo.db.CiscoDb, com.ciscodemo.db.elasticsearch.TripIndex, com.ciscodemo.db.elasticsearch.ESJsonProtocol, com.ciscodemo.db.CiscodemoDB, com.ciscodemo.processor.FeedProcessor, com.ciscodemo.writer.Writer, com.ciscodemo.writer.Writer.SaveTrip)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.sapdemo.db.elasticsearch.ESClient...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: com.sapdemo.db.elasticsearch.ESClient[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.sapdemo.db.elasticsearch.ESClient)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.sapdemo.db.elasticsearch.ESClient,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ESClient,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The com.sapdemo.db.elasticsearch.ESClient has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ESClient,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(client,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.sapdemo.db.elasticsearch.ESClient)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
